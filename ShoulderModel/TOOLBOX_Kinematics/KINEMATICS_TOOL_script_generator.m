function CBScript = KINEMATICS_TOOL_script_generator(task, varargin)
%{
Function for generating the uicontrol callback scripts
--------------------------------------------------------------------------
Syntax :
CBScript = KINEMATICS_TOOL_script_generator(task)
--------------------------------------------------------------------------

File Description:
This function generates scripts for the kinematics tool GUI. The 
scripts are generated as text arrays. The task input variable inidicates 
which script to return.

List of Scripts :
          1) Close Joint Tool
          2) Build Kinematics
          3) Update uicontrols
          4) View Motion
          5.1) Menu Functions I
          5.2) Menu Functions II
          6) Clicked on graph 
          7) Help
--------------------------------------------------------------------------
%}

% Initialise the output
CBScript = [];

%--------------------------------------------------------------------------
% Task 1 : Close the Kiematics Tool
% Closes the GUI and deletes unused variables.
%--------------------------------------------------------------------------
if isequal(task, 'Close Kinematics Tool')
    CBScript = [...
       'clear KGUIHandle;',...
       'clear KPlotHandles;',...
       'clear KinemVisualisationAxes;',...
       'close gcf;',...
       'clear KHandle;',...
       'clear i j;',...
       'clear JEAVisualisationAxes;',...
       'clear PlotTitleList;',...
       'clear MvtList LegHand jea djeadt d2jeadt2 Cpath CScript Image;'];

%--------------------------------------------------------------------------
% Task 2 : Build the Kinematics
% Builds the kinematics (velocity & acceleration)
%--------------------------------------------------------------------------
elseif isequal(task, 'Build Kinematics')
    CBScript = [...
        'KEDATA = KINEMATICS_TOOL_build_motion(KEDATA, BLDATA, REDATA);',...
        'Rmat = MAIN_TOOL_geometry_functions(''Build Rotation Matrices From Euler Angles'', KEDATA.Joint_Angle_Evolution(:,1), BLDATA);',...
        'BLDATA = MAIN_TOOL_geometry_functions(''Update Initial Bony Landmark Data from Joint Rotation Matrices'', Rmat(:,1:3), Rmat(:,4:6), Rmat(:,7:9), Rmat(:,10:12), Rmat(:,13:15), BLDATA);',...
        'for AngleId = 1:11;',...
        'set(KHandle, ''currentaxes'', KIVisualisationAxis.Coord(AngleId,1));',...
        'plot(KEDATA.Joint_Angle_Evolution(8,:)''*180/pi, KEDATA.Joint_Angle_Evolution(AngleId,:)''*180/pi, ''color'', ''red'', ''linewidth'', 2);',...
        'set(gca, ''XDir'', ''reverse'', ''xtick'', [], ''ytick'', [], ''box'', ''on'',''buttondownfcn'', KINEMATICS_TOOL_script_generator(''Clicked On'', AngleId));',...
        'title(MvtList{1, AngleId}, ''fontsize'', 9, ''fontweight'', ''bold'', ''fontname'', ''sansserif'');',...
        'xlim([min(KEDATA.Joint_Angle_Evolution(8,:)''*180/pi), max(KEDATA.Joint_Angle_Evolution(8,:)''*180/pi)]);',...
        'end;'];
    
%--------------------------------------------------------------------------
% Task 2 : Build the Kinematics
% Builds the kinematics (velocity & acceleration)
%--------------------------------------------------------------------------
elseif isequal(task, 'Build Kinematics 2')
    CBScript = 'KINEMATICS_TOOL_reconstruction_main_file;';
%--------------------------------------------------------------------------
% Task 3 : Update UI Controls
% Updates the edit boxes when they are changed.
%--------------------------------------------------------------------------
elseif isequal(task, 'Update UIcontrols')
    CBScript = 'KEDATA = KINEMATICS_TOOL_update_uicontrols(KEDATA, KGUIHandle);';
    
%--------------------------------------------------------------------------
% Task 4 : View Motion
%--------------------------------------------------------------------------
elseif isequal(task, 'View Motion')
    CBScript = 'KINEMATICS_TOOL_view_motion_script;';
    
%--------------------------------------------------------------------------
% Task 5.1 : Menu Functions I
% Menu function for updating the polynomial orders (only one coordinate)
%--------------------------------------------------------------------------
elseif isequal(task, 'Menu Functions I')
    CoordId = varargin{1,1};
    OrderId = varargin{1,2};

    CBScript = [...
        'KGUIHandle = KINEMATICS_TOOL_menu_functions(''Change Order'', KGUIHandle,',...
        num2str(CoordId), ',',...
        num2str(OrderId), ');'];
%--------------------------------------------------------------------------
% Task 5.2 : Menu Functions II
% Menu function for updating the polynomial orders (all coordinates)
%--------------------------------------------------------------------------
elseif isequal(task, 'Menu Functions II')
    CoordId = varargin{1,1};
    OrderId = varargin{1,2};
    
    CBScript = [...
        'KGUIHandle = KINEMATICS_TOOL_menu_functions(''Change All Order'', KGUIHandle,',...
        num2str(CoordId), ',',...
        num2str(OrderId), ');'];
%--------------------------------------------------------------------------
% Task 6 : Graph was clicked on
% Runs a script when one of the joint angle graphs is clicked on.
%--------------------------------------------------------------------------
elseif isequal(task, 'Clicked On')
    AngleId = varargin{1,1};
    
    CBScript = [...
        'AngleId = ', num2str(AngleId), ';',...
        'KINEMATICS_TOOL_view_kinematics_script;'];
    
%--------------------------------------------------------------------------
% Task 7 : Help
% Displays a description message in the command window when the GUI help
% menu is clicked on.
%--------------------------------------------------------------------------
elseif isequal(task, 'Help')  
    CBScript = [...
        'sprintf([''--------------------- KINEMATICS TOOL ------------------------- \n'', ',...
        ' ''This interface for building the shoulder models kinematics.\n'',',...
        ' ''Each coordinate can be built using a polynomial method.\n'',',...
        ' ''The coordinates are the minimal coordinates. The first coordinate is the\n'',',...
        ' ''clavicular axial rotation. The second and third coordinates are the parametric\n'',',...
        ' ''coordinates of the point AI moving on its ellipsoid. M2 inceasing means rotation\n'',',...
        ' ''forwards around the ellipsoid. M3 increasing means rotation downwards. M4 is the\n'', ',...
        ' ''TS coordinate. This coordinate indicates where on the sphere-ellipsoid intersection\n'', ',...
        ' ''the point TS is located. The next three coordinates are the GH joint coordinates.\n'', ',...
        ' ''The two last coordinates are the rotations of ulna and radius, respectively.'']);',...
        'disp(ans);']; 
%--------------------------------------------------------------------------
% Throw an error if task is not valid
%--------------------------------------------------------------------------
else
    % Throw an error. No valid task was given
    ErrorMsg = [...
        'The user supplied task is not valid. ',...
        'KINEMATICS_TOOL_script_generator requires a valid task as input.\n',...
        'Try the Following : \n',...
        '1) Close Kinematics Tool,\n',....
        '2) Build Kinematics,\n',...
        '3) Update UIcontrols,\n',... 
        '4) View Motion,\n',...
        '5.1) Menu Functions I,\n',...
        '5.2) Menu Functions II,\n',...
        '6) Clicked On,\n',...
        '7) Help.'];
    error('ScptGen:ErrorMsg', ErrorMsg);
end
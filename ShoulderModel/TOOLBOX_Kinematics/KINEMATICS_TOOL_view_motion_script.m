%--------------------------------------------------------------------------
%
%
%   GUI FOR RUNNING A VIDEO OF THE MOTION
%--------------------------------------------------------------------------
%
% File Structure :
% This script generates a small GUI of the motion. 
%
%--------------------------------------------------------------------------

%--------------------------------------------------------------------------
% CREATE THE FIGURE
%--------------------------------------------------------------------------
MOVHandle = figure(...
    'color', 'white',...
    'units', 'normalized',...
    'position', [0.1, 0.1, 0.4, 0.8],...
    'toolbar', 'figure',...
    'name', 'EPFL - LBO Upper Extremity Model: Motion Visualization');

%--------------------------------------------------------------------------
% CREATE THE CLOSE & DELETE SCRIPT
%--------------------------------------------------------------------------
CScript = [...
    'clear MOVGUIHandle;',...
    'clear MOVPlotHandles;',...
    'clear MovieVisualisationAxes;',...
    'clear SC AC AA TS AI GH HU EL EM US CP RS;',...
    'clear Rc Rs Rh Ru Rr;',...
    'close gcf;',...
    'clear MOVHandle;',...
    'clear Rmat RScript;'];

%--------------------------------------------------------------------------
% CREATE THE CLOSE PUSHBUTTON
%--------------------------------------------------------------------------
MOVGUIHandle.Close_Button = uicontrol(...
    'units', 'normalized',...
    'position', [0.35, 0, 0.3, 0.05],...
    'style', 'pushbutton',...
    'string', 'CLOSE FIGURE',...
    'fontsize', 14,...
    'fontweight', 'bold',...
    'callback', CScript);

%--------------------------------------------------------------------------
% CREATE THE RUN VIDEO CALLBACK SCRIPT
%--------------------------------------------------------------------------
RScript = [...
    'for i = 1:3:size(KEDATA.Point_Evolution.AI,2)',...
    'SC = KEDATA.Point_Evolution.SC(:,i);',...
    'AC = KEDATA.Point_Evolution.AC(:,i);',...
    'AA = KEDATA.Point_Evolution.AA(:,i);',...
    'TS = KEDATA.Point_Evolution.TS(:,i);',...
    'AI = KEDATA.Point_Evolution.AI(:,i);',...
    'GH = KEDATA.Point_Evolution.GH(:,i);',...
    'HU = KEDATA.Point_Evolution.HU(:,i);',...
    'EL = KEDATA.Point_Evolution.EL(:,i);',...
    'EM = KEDATA.Point_Evolution.EM(:,i);',...
    'US = KEDATA.Point_Evolution.US(:,i);',...
    'CP = KEDATA.Point_Evolution.CP(:,i);',...
    'RS = KEDATA.Point_Evolution.RS(:,i);',...
    'Rmat = MAIN_TOOL_geometry_functions(''Build Rotation Matrices From Euler Angles'', KEDATA.Joint_Angle_Evolution(:,i), BLDATA'');',...
    'Rc = Rmat(:,1:3);',...
    'Rs = Rmat(:,4:6);',...
    'Rh = Rmat(:,7:9);',...
    'Ru = Rmat(:,10:12);',...
    'Rr = Rmat(:,13:15);',...
    'BLDATA.Current_Points.IJ = BLDATA.Initial_Points.IJ;',...
    'BLDATA.Current_Points.PX = BLDATA.Initial_Points.PX;',...
    'BLDATA.Current_Points.T8 = BLDATA.Initial_Points.T8;',...
    'BLDATA.Current_Points.C7 = BLDATA.Initial_Points.C7;',...
    'BLDATA.Current_Points.SC = SC;',...
    'BLDATA.Current_Points.AC = AC;',...
    'BLDATA.Current_Points.GH = GH;',...
    'BLDATA.Current_Points.HU = HU;',...
    'BLDATA.Current_Points.TS = TS;',...
    'BLDATA.Current_Points.AI = AI;',...
    'BLDATA.Current_Points.AA = AA;',...
    'BLDATA.Current_Points.EL = EL;',...
    'BLDATA.Current_Points.EM = EM;',...
    'BLDATA.Current_Points.US = US;',...
    'BLDATA.Current_Points.CP = CP;',...
    'BLDATA.Current_Points.RS = RS;',...
    'BLDATA.Current_WFBones.Thorax       = BLDATA.Initial_WFBones.Thorax;',...
    'BLDATA.Current_WFBones.Clavicula    = [SC, AC];',...
    'BLDATA.Current_WFBones.Scapula      = [AC, AA, TS, AI, GH, AC];',...
    'BLDATA.Current_WFBones.Humerus      = [GH, HU, EL, EM];',...
    'BLDATA.Current_WFBones.Medial       = [AC, AA, TS, AI];',...
    'BLDATA.Current_WFBones.Ulna         = [CP, HU, EM, US];',...
    'BLDATA.Current_WFBones.Radius       = [CP, RS];',...
    'BLDATA.Current_Matrices_L2A.Rc = Rc;',...
    'BLDATA.Current_Matrices_L2A.Rs = Rs;',...
    'BLDATA.Current_Matrices_L2A.Rh = Rh;',...
    'BLDATA.Current_Matrices_L2A.Ru = Ru;',...
    'BLDATA.Current_Matrices_L2A.Rr = Rr;',...
    'MOVPlotHandles.MeshHandle(1) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(1), MEDATA, 0, BLDATA);',...
    'MOVPlotHandles.MeshHandle(2) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(2), MEDATA, 1, BLDATA);',...
    'MOVPlotHandles.MeshHandle(3) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(3), MEDATA, 2, BLDATA);',...
    'MOVPlotHandles.MeshHandle(4) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(4), MEDATA, 3, BLDATA);',...
    'MOVPlotHandles.MeshHandle(5) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(5), MEDATA, 4, BLDATA);',...
    'MOVPlotHandles.MeshHandle(6) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(6), MEDATA, 5, BLDATA);',...
    'MOVPlotHandles.MeshHandle(7) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(7), MEDATA, 6, BLDATA);',...
    'MOVPlotHandles.WireFrameHandle(1) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(1), 0, BLDATA);',...
    'MOVPlotHandles.WireFrameHandle(2) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(2), 1, BLDATA);',...
    'MOVPlotHandles.WireFrameHandle(3) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(3), 2, BLDATA);',...
    'MOVPlotHandles.WireFrameHandle(4) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(4), 3, BLDATA);',...
    'MOVPlotHandles.WireFrameHandle(5) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(5), 4, BLDATA);',...
    'MOVPlotHandles.WireFrameHandle(6) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(6), 5, BLDATA);',...
    'drawnow;',...
    'end'];

%--------------------------------------------------------------------------
% CREATE THE RUN VIDEO PUSHBUTTON
%--------------------------------------------------------------------------
MOVGUIHandle.Close_Button = uicontrol(...
    'units', 'normalized',...
    'position', [0.65, 0, 0.3, 0.05],...
    'style', 'pushbutton',...
    'string', 'REPLAY MOTION',...
    'fontsize', 14,...
    'fontweight', 'bold',...
    'callback', RScript);

%--------------------------------------------------------------------------
% CREATE THE VIDEO AXES
%--------------------------------------------------------------------------
MovieVisualisationAxes = axes(...
    'units', 'normalized',...
    'position', [0.05, 0.05, 0.9, 0.9]);

%--------------------------------------------------------------------------
% INITIALISATION SCRIPT
%--------------------------------------------------------------------------
set(MOVHandle, 'currentaxes', MovieVisualisationAxes); hold on;

% Set the correct current bony landmarks
Rmat = MAIN_TOOL_geometry_functions('Build Rotation Matrices From Euler Angles', KEDATA.Joint_Angle_Evolution(:,1), BLDATA);
BLDATA = MAIN_TOOL_geometry_functions('Update Initial Bony Landmark Data from Joint Rotation Matrices', Rmat(:,1:3), Rmat(:,4:6), Rmat(:,7:9), Rmat(:,10:12), Rmat(:,13:15), BLDATA);

% Create the 3-D Meshing Visualisations
MOVPlotHandles.MeshHandle(1) = VISUALISATION_view_bone_meshing([], MEDATA, 0, BLDATA);
MOVPlotHandles.MeshHandle(2) = VISUALISATION_view_bone_meshing([], MEDATA, 1, BLDATA);
MOVPlotHandles.MeshHandle(3) = VISUALISATION_view_bone_meshing([], MEDATA, 2, BLDATA);
MOVPlotHandles.MeshHandle(4) = VISUALISATION_view_bone_meshing([], MEDATA, 3, BLDATA);
MOVPlotHandles.MeshHandle(5) = VISUALISATION_view_bone_meshing([], MEDATA, 4, BLDATA);
MOVPlotHandles.MeshHandle(6) = VISUALISATION_view_bone_meshing([], MEDATA, 5, BLDATA);
MOVPlotHandles.MeshHandle(7) = VISUALISATION_view_bone_meshing([], MEDATA, 6, BLDATA);


% Create the 3-D Wire Frame Visualisations
MOVPlotHandles.WireFrameHandle(1) = VISUALISATION_view_bone_wireframe([], 0, BLDATA);
MOVPlotHandles.WireFrameHandle(2) = VISUALISATION_view_bone_wireframe([], 1, BLDATA);
MOVPlotHandles.WireFrameHandle(3) = VISUALISATION_view_bone_wireframe([], 2, BLDATA);
MOVPlotHandles.WireFrameHandle(4) = VISUALISATION_view_bone_wireframe([], 3, BLDATA);
MOVPlotHandles.WireFrameHandle(5) = VISUALISATION_view_bone_wireframe([], 4, BLDATA);
MOVPlotHandles.WireFrameHandle(6) = VISUALISATION_view_bone_wireframe([], 5, BLDATA);

% Set some of the global properties for the entire plot
light('Position',[1 0 0],'Style','infinite');
light('Position',[0 0 -10],'Style','local');
light('Position',[10 -50 0],'Style','infinite');
colormap copper;
box on;
material dull;
%axis equal;
axis ([-100 800 -200 800 -800 800])
%zoom(1);
view([165, 15]);

% Run through the motion while skipping some points.
% (This is a copy of the callback script defined above)
for i = 1:3:size(KEDATA.Point_Evolution.AI,2)
    % Build the Current Bony Landmark Positions
    SC = KEDATA.Point_Evolution.SC(:,i);
    AC = KEDATA.Point_Evolution.AC(:,i);
    AA = KEDATA.Point_Evolution.AA(:,i);
    TS = KEDATA.Point_Evolution.TS(:,i);
    AI = KEDATA.Point_Evolution.AI(:,i);
    GH = KEDATA.Point_Evolution.GH(:,i);
    HU = KEDATA.Point_Evolution.HU(:,i);
    EL = KEDATA.Point_Evolution.EL(:,i);
    EM = KEDATA.Point_Evolution.EM(:,i);
    US = KEDATA.Point_Evolution.US(:,i);
    CP = KEDATA.Point_Evolution.CP(:,i);
    RS = KEDATA.Point_Evolution.RS(:,i);
    
    Rmat = MAIN_TOOL_geometry_functions('Build Rotation Matrices From Euler Angles', KEDATA.Joint_Angle_Evolution(:,i)', BLDATA);
    Rc = Rmat(:,1:3);
    Rs = Rmat(:,4:6);
    Rh = Rmat(:,7:9);
    Ru = Rmat(:,10:12);
    Rr = Rmat(:,13:15);
    
    % List of Points in the current configuration
    BLDATA.Current_Points.IJ = BLDATA.Initial_Points.IJ;
    BLDATA.Current_Points.PX = BLDATA.Initial_Points.PX;
    BLDATA.Current_Points.T8 = BLDATA.Initial_Points.T8;
    BLDATA.Current_Points.C7 = BLDATA.Initial_Points.C7;
    BLDATA.Current_Points.SC = SC;
    BLDATA.Current_Points.AC = AC;
    BLDATA.Current_Points.GH = GH;
    BLDATA.Current_Points.HU = HU;
    BLDATA.Current_Points.TS = TS;
    BLDATA.Current_Points.AI = AI;
    BLDATA.Current_Points.AA = AA;
    BLDATA.Current_Points.EL = EL;
    BLDATA.Current_Points.EM = EM;
    BLDATA.Current_Points.US = US;
    BLDATA.Current_Points.CP = CP;
    BLDATA.Current_Points.RS = RS;
    
    % Build the bone wire frames for plotting purposes
    BLDATA.Current_WFBones.Thorax       = BLDATA.Initial_WFBones.Thorax;
    BLDATA.Current_WFBones.Clavicula    = [SC, AC];
    BLDATA.Current_WFBones.Scapula      = [AC, AA, TS, AI, GH, AC];
    BLDATA.Current_WFBones.Humerus      = [GH, HU, EL, EM];
    BLDATA.Current_WFBones.Medial       = [AC, AA, TS, AI];
    BLDATA.Current_WFBones.Ulna         = [CP, HU, EM, US];
    BLDATA.Current_WFBones.Radius       = [CP, RS];
    
    % Current Rotation Matrices
    BLDATA.Current_Matrices_L2A.Rc = Rc;
    BLDATA.Current_Matrices_L2A.Rs = Rs;
    BLDATA.Current_Matrices_L2A.Rh = Rh;
    BLDATA.Current_Matrices_L2A.Ru = Ru;
    BLDATA.Current_Matrices_L2A.Rr = Rr;
    
    MOVPlotHandles.MeshHandle(1) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(1), MEDATA, 0, BLDATA);
    MOVPlotHandles.MeshHandle(2) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(2), MEDATA, 1, BLDATA);
    MOVPlotHandles.MeshHandle(3) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(3), MEDATA, 2, BLDATA);
    MOVPlotHandles.MeshHandle(4) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(4), MEDATA, 3, BLDATA);
    MOVPlotHandles.MeshHandle(5) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(5), MEDATA, 4, BLDATA);
    MOVPlotHandles.MeshHandle(6) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(6), MEDATA, 5, BLDATA);
    MOVPlotHandles.MeshHandle(7) = VISUALISATION_view_bone_meshing(MOVPlotHandles.MeshHandle(7), MEDATA, 6, BLDATA);

    
    % Create the 3-D Wire Frame Visualisations
    MOVPlotHandles.WireFrameHandle(1) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(1), 0, BLDATA);
    MOVPlotHandles.WireFrameHandle(2) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(2), 1, BLDATA);
    MOVPlotHandles.WireFrameHandle(3) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(3), 2, BLDATA);
    MOVPlotHandles.WireFrameHandle(4) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(4), 3, BLDATA);
    MOVPlotHandles.WireFrameHandle(5) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(5), 4, BLDATA);
    MOVPlotHandles.WireFrameHandle(6) = VISUALISATION_view_bone_wireframe(MOVPlotHandles.WireFrameHandle(6), 5, BLDATA);

    drawnow;
end

% Clear some variables
clear SC AC AA TS AI GH HU EL EM US RS CP Rmat Rc Rs Rh Ru Rr;

% When Motion is over, reset the current BLDATA to initial
% Get the Current Rotation Matrices
Rmat = MAIN_TOOL_geometry_functions('Build Rotation Matrices From Euler Angles', KEDATA.Joint_Angle_Evolution(:,1), BLDATA);

% Update the current configuration
BLDATA = MAIN_TOOL_geometry_functions(...
    'Update Current Bony Landmark Data from Joint Rotation Matrices', Rmat(:,1:3), Rmat(:,4:6), Rmat(:,7:9), Rmat(:,10:12), Rmat(:,13:15), BLDATA);

clear Rmat i;
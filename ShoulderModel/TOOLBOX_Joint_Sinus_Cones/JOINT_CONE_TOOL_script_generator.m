function CBScript = JOINT_CONE_TOOL_script_generator(task, varargin)
% UICONTROL Callback Script Generator for the joint tool GUI controls.
%--------------------------------------------------------------------------
% Syntax :
% CBScript = JOINT_CONE_TOOL_script_generator(task, varargin)
%--------------------------------------------------------------------------
%
% EPFL - LA - LBO SHOULDER MODEL
% Created by : David Ingram (LA - EPFL)
%
% File Description :
% This function generates scripts for the joint sinus cone tool GUI. The 
% scripts are generated as text arrays. The task input variable inidicates 
% which script to return.
% varargin contains extra information on which cone parameter is being
% modified.
%
% List of Scripts :
%           1) Close Joint Tool
%           2) Save Visualisation
%           3) Reset Cone Data
%           4) Cone Data Modified 
%           5) Help
%--------------------------------------------------------------------------

% Initialise the output
CBScript = [];

%--------------------------------------------------------------------------
% Task 1 : Close the Joint Sinus Cone GUI
% Closes the GUI and deletes unsused variables.
%--------------------------------------------------------------------------
if isequal(task, 'Close Joint Tool')
    CBScript = [...
       'clear JGUIHandle;',...
       'clear JPlotHandles;',...
       'clear JointVisualisationAxes;',...
       'close gcf;',...
       'clear JHandle;'];

%--------------------------------------------------------------------------
% Task 2 : Save Visualisation
% Saves the current visualisation using the main function.
%--------------------------------------------------------------------------
elseif isequal(task, 'Save Visualisation')
CBScript =  'MAIN_CALLBACK_save_visualisation(JHandle, 4);';

%--------------------------------------------------------------------------
% Task 3 : Reset the Cone Data
% Resets the cone data to values taken from the litterature. (Maurel 1998
% (EPFL)).
%--------------------------------------------------------------------------
elseif isequal(task, 'Reset Cone Data')
    CBScript = [...
        'JCDATA = MAIN_INITIALISATION_build_data_joint_sinus_cone();',...
        '[JGUIHandle] = JOINT_CONE_TOOL_reset_values(JCDATA, JGUIHandle);',...
        'JPlotHandles.ConeHandle(1) = VISUALISATION_view_joint_sinus_cones(JPlotHandles.ConeHandle(1), JCDATA, BLDATA, 1);',...
        'JPlotHandles.ConeHandle(2) = VISUALISATION_view_joint_sinus_cones(JPlotHandles.ConeHandle(2), JCDATA, BLDATA, 2);',...
        'JPlotHandles.ConeHandle(3) = VISUALISATION_view_joint_sinus_cones(JPlotHandles.ConeHandle(3), JCDATA, BLDATA, 3);'];
    
%--------------------------------------------------------------------------
% Task 4 : Cone Data Modified
% When a slider or edit boy is changed, the cone data is updated and so is
% the visualisation.
%--------------------------------------------------------------------------
elseif isequal(task, 'Cone Data Modified')
    if isequal(varargin{1,1}, 'Slider Modified')
        SliderId = num2str(varargin{1,2});
        ConeId = num2str(varargin{1,3});
        CBScript = [...
            '[JCDATA, JGUIHandle] = JOINT_CONE_TOOL_change_cone(''Slider Modified'',',...
            SliderId,',',...
            ConeId, ',',...
            'JCDATA, JGUIHandle);',...
            'JPlotHandles.ConeHandle(1) = VISUALISATION_view_joint_sinus_cones(JPlotHandles.ConeHandle(1), JCDATA, BLDATA, 1);',...
            'JPlotHandles.ConeHandle(2) = VISUALISATION_view_joint_sinus_cones(JPlotHandles.ConeHandle(2), JCDATA, BLDATA, 2);',...
            'JPlotHandles.ConeHandle(3) = VISUALISATION_view_joint_sinus_cones(JPlotHandles.ConeHandle(3), JCDATA, BLDATA, 3);'];
            
    elseif isequal(varargin{1,1}, 'Value Modified')
        SliderId = num2str(varargin{1,2});
        ConeId = num2str(varargin{1,3});
        CBScript = [...
            '[JCDATA, JGUIHandle] = JOINT_CONE_TOOL_change_cone(''Value Modified'',',...
            SliderId,',',...
            ConeId, ',',...
            'JCDATA, JGUIHandle);',...
            'JPlotHandles.ConeHandle(1) = VISUALISATION_view_joint_sinus_cones(JPlotHandles.ConeHandle(1), JCDATA, BLDATA, 1);',...
            'JPlotHandles.ConeHandle(2) = VISUALISATION_view_joint_sinus_cones(JPlotHandles.ConeHandle(2), JCDATA, BLDATA, 2);',...
            'JPlotHandles.ConeHandle(3) = VISUALISATION_view_joint_sinus_cones(JPlotHandles.ConeHandle(3), JCDATA, BLDATA, 3);'];
    else
    end
%--------------------------------------------------------------------------
% Task 5 : Help
%--------------------------------------------------------------------------
elseif isequal(task, 'Help')
    CBScript = [...
        'sprintf([''---------------- JOINT SINUS CONE TOOL -------------------------\n'', ',...
        ' ''This GUI allows you to modify the joint sinus cone parameters.\n'', ',...
        ' ''Although the cones are not used, they could be in the future to\n'', ',...
        ' ''impose the joint motion limitations. The original data is take from\n'', ',...
        ' ''the PhD dissertation by Walter Maurel (EPFL) 1998.'']);',...
        'disp(ans);'];
    
%--------------------------------------------------------------------------
% Throw an error if task is not valid
%--------------------------------------------------------------------------
else
    % Throw an error. No valid task was given
    ErrorMsg = [...
        'The user supplied task is not valid.',...
        'JOINT_CONE_TOOL_script_generator requires a valid task as input.\n',...
        'Try the Following : \n',...
        '1) Close Joint Tool,\n',...
        '2) Save Visualisation,\n',...
        '3) Reset Cone Data,\n',...
        '4) Cone Data Modified,\n',...
        '5) Help.'];
    error('ScptGen:ErrorMsg', ErrorMsg);
end